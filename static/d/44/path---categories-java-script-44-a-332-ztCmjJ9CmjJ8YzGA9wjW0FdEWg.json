{"data":{"allMarkdownRemark":{"totalCount":38,"edges":[{"node":{"fields":{"slug":"/javascript/synthetic-event/","date":"2018-12-26T16:00:00.000Z"},"excerpt":"创建自定义事件 添加自定义数据 – CustomEvent() 要向事件对象添加更多数据，可以使用CustomEvent，detail属性可用于传递自定义数据\nCustomEvent 接口可以为 event 对象添加更多的数据。例如，event 可以创建如下：","timeToRead":1,"frontmatter":{"title":"合成事件","tags":["synthetic event"],"cover":null,"date":"2018-12-27T20:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/why-need-constructor/","date":"2018-12-16T16:00:00.000Z"},"excerpt":"简单说 简单说，这样做是为了让所有的实例都能通过 constructor 属性访问构造函数 初看这种方式并无问题，但是你会发现下面的代码失效了： F 是实例对象 f 的构造函数,但是f.constructor…","timeToRead":1,"frontmatter":{"title":"构造函数原型里面为什么需要有个 constructor 来指向构造函数自己？","tags":["constructor"],"cover":null,"date":"2018-12-17T13:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/deep-clone/","date":"2018-12-11T16:00:00.000Z"},"excerpt":"JSON.parse(JSON.stringify(obj)) 缺点：值是 undefined 和 function 的时候，会被忽略 对象深拷贝 判断是否为复杂类型","timeToRead":1,"frontmatter":{"title":"深度克隆","tags":["deepclone"],"cover":null,"date":"2018-12-12T15:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/get-set/","date":"2018-11-26T16:00:00.000Z"},"excerpt":"example 实例1 实例2 参考链接 浅谈 JS 对象添加 getter与 setter 的5种方法以及如何让对象属性不可配置或枚举","timeToRead":1,"frontmatter":{"title":"getter and setter","tags":["JS知识点"],"cover":null,"date":"2018-11-27T10:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/load/","date":"2018-11-08T16:00:00.000Z"},"excerpt":"example 或者","timeToRead":1,"frontmatter":{"title":"通过 load 动态加载 JavaScript 文件","tags":["load"],"cover":null,"date":"2018-11-09T17:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/expressions-vs-statements/","date":"2018-10-23T16:00:00.000Z"},"excerpt":"表达式和语句 Javascript…","timeToRead":1,"frontmatter":{"title":"expressions vs statements","tags":["expressions vs statements"],"cover":null,"date":"2018-10-24T15:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/vue/vue/","date":"2018-05-02T16:00:00.000Z"},"excerpt":"指令 v-bind 绑定 v-if 条件 v-for 循环 v-on 添加事件监听器 v-module 实现表单输入和应用状态之间的双向绑定 v-once 指令，你也能执行一次性地插值，当数据改变时，插值处的内容不会更新 Vue 实例 所有的 Vue 组件都是 Vue…","timeToRead":4,"frontmatter":{"title":"vue 学习记录","tags":["JavaScript","vue"],"cover":null,"date":"2018-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/pattern/publish-subscribe/","date":"2018-02-25T16:00:00.000Z"},"excerpt":"  发布---订阅模式又叫观察者模式，它定义了对象间的一种一对多的关系，让多个观察者对象同时监听某一个主题对象，当一个对象发生改变时，所有依赖于它的对象都将得到通知。 日常工作案例   我们日常工作中经常使用到，比如我们的ajax请求，请求有成功(success…","timeToRead":1,"frontmatter":{"title":"发布订阅模式","tags":["JavaScript","pattern"],"cover":null,"date":"2018-02-26T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/performance-analysis-method/performanceAnalysisMethod/","date":"2018-02-25T16:00:00.000Z"},"excerpt":"一般情况下，作为开发者，需要对代码性能进行分析，可以使用以下三种方法进行分析。 使用   和  进行分析 比如分析 for 与 map 性能 google chrome Version 62 结果显示如下： 在此种情况下，for循环性能明显比map…","timeToRead":1,"frontmatter":{"title":"js性能分析方法","tags":["JavaScript"],"cover":null,"date":"2018-02-26T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/priority/priority/","date":"2018-02-25T16:00:00.000Z"},"excerpt":"运算符优先级 运算符 描述 . [] () 字段访问、数组下标、函数调用以及表达式分组 ++ -- - ~ ! delete new typeof void…","timeToRead":1,"frontmatter":{"title":"运算符优先","tags":["JavaScript","priority"],"cover":null,"date":"2018-02-26T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/memory-leak/memoryLeak/","date":"2017-10-30T16:00:00.000Z"},"excerpt":"什么是内存泄漏？ 程序的运行需要内存。只要程序提出要求，操作系统或者运行时（runtime）就必须供给内存。     对于持续运行的服务进程（daemon…","timeToRead":2,"frontmatter":{"title":"内存泄露","tags":["memory leak"],"cover":null,"date":"2017-10-31T10:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/promise/promise/","date":"2017-10-16T16:00:00.000Z"},"excerpt":"三种状态 pending（进行中）、fulfilled（已成功）和rejected（已失败） 一旦状态改变，就不会再变，任何时候都可以得到这个结果。Promise对象的状态改变，只有两种可能：从pending变为fulfilled和从pending变为rejected…","timeToRead":3,"frontmatter":{"title":"promise","tags":["JavaScript","promise"],"cover":null,"date":"2017-10-17T16:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/extends-and-prototype-chains/extends-and-prototype-chains/","date":"2017-09-21T16:00:00.000Z"},"excerpt":"历史 1994年，网景公司（Netscape）发布了Navigator浏览器0.9版。 历史上第一个比较成熟的网络浏览器，轰动一时。但是，这个版本的浏览器只能用来浏览，不具备与访问者互动的能力. 网景公司急需一种网页脚本语言，使得浏览器可以与网页互动。 Brendan Eich…","timeToRead":4,"frontmatter":{"title":"继承与原型链 ","tags":["继承与原型链"],"cover":null,"date":"2017-09-22T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/arguments/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"","timeToRead":1,"frontmatter":{"title":"将arguments变成数组","tags":["arguments"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/change-search-text-in--keyboard/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"这是利用了表单属性,一般系统会识别用以下结构   必须要在form表单里面,但是这样又出现了一个问题,点击搜索按钮,会刷新页面 这是因为,form的发展历史在ajax之前,以前数据交互都是通过表单,然后刷新真个页面,随着ajax…","timeToRead":1,"frontmatter":{"title":"改变keyboard 显示样式","tags":["keyboard"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/call-apply/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"call 比 apply 快的多，下面代码运行结果 google chrome Version 62 结果显示如下： 原因在与.apply在运行前要对作为参数的数组进行一系列检验和深拷贝，.call则没有这些步骤。具体可以参考ECMA . 深拷贝是指将.apply…","timeToRead":2,"frontmatter":{"title":"call 与 apply性能分析","tags":["JavaScript","call vs apply"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/browser/emory-recall/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"浏览器内存回收是自动回收内存。   当不在有任何引用指向一个对象，解释器就会知道这个对象没用了，然后自动回收塔所占用的内存资源 参考 JavaScript权威指南 p33","timeToRead":1,"frontmatter":{"title":"浏览器内存回收机制","tags":["browser"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/canvas/process cicle/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"以前使用css3画了一个进度条,挺复杂的,而且有点瑕疵,使用canvas从新写了个,挺简单的,打那么如下: HTML: JS:","timeToRead":1,"frontmatter":{"title":"canvas 进度圆","tags":["arguments"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/event/order/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"参考链接 http://www.cnblogs.com/hh54188/archive/2012/02/08/2343357.html https://www.quirksmode.org/js/events_order.html","timeToRead":1,"frontmatter":{"title":"事件的捕获和冒泡","tags":["event"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/array/array-distinct/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"使用 Set 数据结构 使用对象属性不能相同来 使用indexOf forEach 参考链接 JS实现数组去重方法总结(六种方法)\n","timeToRead":1,"frontmatter":{"title":"数组去重","tags":["array"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/array/array-functions/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"Array.from() 语法 Array.from(arrayLike[, mapFn , thisArg ]) 参数 arrayLike：想要转换成数组的伪数组对象或可迭代对象。 \nmapFn…","timeToRead":1,"frontmatter":{"title":"数组常用方法","tags":["array"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/object/object/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"使用for in进行循环时,会枚举对象的所有属性名(或键名).通常你需要检测object.hasOwnProperty(variable)来确定这个属性是该对象的成员还是来自原型链.","timeToRead":1,"frontmatter":{"title":"对象循环自身属性","tags":["Object","JavaScript"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/regexp/regexp/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"…","timeToRead":1,"frontmatter":{"title":"正则表达式","tags":["正则表达式"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/request/fetch/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"fetch","timeToRead":1,"frontmatter":{"title":"fetch","tags":["fetch"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/request/get-vs-post/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"原理上的区别 根据HTTP规范 GET用于信息获取,而且应该是安全的和幂等的。\nPOST表示可能修改变服务器上的资源的请求。 不同点 GET请求的数据会附在URL POST把提交的数据则放置在是HTTP包的包体中 POST的安全性要比GET的安全性高 GET和POST…","timeToRead":1,"frontmatter":{"title":"get vs post","tags":["get vs post"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/tricks/random-color/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"","timeToRead":1,"frontmatter":{"title":"获取随机色","tags":["JavaScript","JavaScript tricks"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/window/open-new-win/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"","timeToRead":1,"frontmatter":{"title":"在新的窗口打开页面","tags":["在新的窗口打开页面","window"],"cover":null,"date":"2017-05-03T22:00:05.000Z"}}},{"node":{"fields":{"slug":"/javascript/JavaScript/","date":"2017-02-14T16:00:00.000Z"},"excerpt":"js知识收集   数据类型： 六种原型数据类型： String Number Boolean null undefined Symbol 以及Object对象 JavaScript是函数级作用域(function-level scope) 和C系语言是不同的。块，就像if…","timeToRead":1,"frontmatter":{"title":"JS知识点","tags":["JS知识点"],"cover":null,"date":"2017-02-15T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/closure/","date":"2017-02-14T16:00:00.000Z"},"excerpt":"\"nAdd=function(){n+=1}\"这一行，首先在nAdd前面没有使用var关键字，因此nAdd是一个全局变量,而不是局部变量.","timeToRead":1,"frontmatter":{"title":"闭包 ","tags":["闭包"],"cover":null,"date":"2017-02-15T22:00:01.000Z"}}},{"node":{"fields":{"slug":"/javascript/cookie/","date":"2017-02-14T16:00:00.000Z"},"excerpt":"HTTP Cookie（也叫Web cookie或者浏览器Cookie）是服务器发送到用户浏览器并保存在浏览器上的一块数据，它会在浏览器下一次发起请求时被携带并发送到服务器上。 Cookie…","timeToRead":1,"frontmatter":{"title":"cookie","tags":["cookie"],"cover":null,"date":"2017-02-15T22:00:01.000Z"}}},{"node":{"fields":{"slug":"/javascript/console/","date":"2017-02-14T16:00:00.000Z"},"excerpt":"log 输出正常的 log assert() 判断第一个参数是否为真，false的话抛出异常并且在控制台输出相应信息。 clear() 清空控制台 count()  * 以参数为标识记录调用的次数，调用时在控制台打印标识以及调用次数。 dir…","timeToRead":2,"frontmatter":{"title":"console","tags":["console"],"cover":null,"date":"2017-02-15T22:00:01.000Z"}}},{"node":{"fields":{"slug":"/javascript/js-domain/","date":"2017-02-14T16:00:00.000Z"},"excerpt":"…","timeToRead":1,"frontmatter":{"title":"js作用域与块级作用域","tags":["js作用域与块级作用域"],"cover":null,"date":"2017-02-15T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/keybord/","date":"2017-02-14T16:00:00.000Z"},"excerpt":"js keyup、keypress和keydown事件 以上这三种都是键盘事件,当一个按键被pressed 或released在每一个现代浏览器中，都可能有三种客户端事件。 keydown event\nkeypress event\nkeyup event keydown…","timeToRead":5,"frontmatter":{"title":"keyboard","tags":["keyboard event"],"cover":null,"date":"2017-02-15T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/class-object-prototype/","date":"2017-02-07T16:00:00.000Z"},"excerpt":"prototype 1、对象方法包括构造函数中的方法以及构造函数原型上面的方法； 2、类方法，其实这里的类就是一个函数，在js中由于函数也是一个对象，所以可以为函数添加属性以及方法，这种方法在node中用的比较多； 3、原型方法一般用于对象实例共享，比如Person…","timeToRead":1,"frontmatter":{"title":"prototype","tags":["prototype"],"cover":null,"date":"2017-02-08T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/currying/","date":"2017-02-07T16:00:00.000Z"},"excerpt":"柯里化 柯里化（Currying），又称部分求值（Partial Evaluation），是把接受多个参数的函数变换成接受一个单一参数（最初函数的第一个参数）的函数，并且返回接受余下的参数而且返回结果的新函数的技术。 用处 参数复用 提前返回 柯里化 延迟计算 柯里化 从IE…","timeToRead":3,"frontmatter":{"title":"currying","tags":["currying"],"cover":null,"date":"2017-02-08T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/falsy/","date":"2017-02-07T16:00:00.000Z"},"excerpt":"以下的值被当成false,其余值为真,记住这些能够快速进行布尔操作 false null undefined 空字符串 '' 数字 0 数字 NaN","timeToRead":1,"frontmatter":{"title":"falsy","tags":["falsy"],"cover":null,"date":"2017-02-08T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/substring-and-substr/","date":"2017-02-07T16:00:00.000Z"},"excerpt":"背景 substring与substr的区别 区别 substring     start：必选，非负整数，第一个字符的位置在stingObject的位置\nstop： 可选，非负整数， substr() \nstart…","timeToRead":1,"frontmatter":{"title":"substring 与 substr的区别 ","tags":["keyboard event"],"cover":null,"date":"2017-02-08T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/this/","date":"2017-02-07T16:00:00.000Z"},"excerpt":"this到底指向哪里？ 三种情况 尽管对象b中没有属性a，这个this指向的也是对象b，因为this只会指向它的上一级对象，不管这个对象中有没有this要的东西。 this永远指向的是最后调用它的对象，也就是看它执行的时候是谁调用的 构造函数版this new…","timeToRead":2,"frontmatter":{"title":"this 指向","tags":["this 指向"],"cover":null,"date":"2017-02-08T22:00:00.000Z"}}}]}},"pageContext":{"category":"JavaScript"}}