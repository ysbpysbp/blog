{"data":{"markdownRemark":{"html":"<h2 id=\"一、背景\"><a href=\"#%E4%B8%80%E3%80%81%E8%83%8C%E6%99%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一、背景</h2>\n<p>一直以来，自我感觉，有目标，但是对于具体实现的过程，并没有清晰的短期目标，以及短期目标实现的具体步骤。<br>\n趁此机会，静下心来剖析一下自己。看看自身的问题、优势，总结下2106，计划下2017。</p>\n<h2 id=\"二、2016我干了啥\"><a href=\"#%E4%BA%8C%E3%80%812016%E6%88%91%E5%B9%B2%E4%BA%86%E5%95%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>二、2016我干了啥</h2>\n<ul>\n<li>sass，less</li>\n<li>Konckout框架 </li>\n<li>看完一遍Javascript权威指南</li>\n<li>熟悉了Node</li>\n<li>React框架</li>\n<li>Redux框架</li>\n<li>熟悉了ES6、7</li>\n<li>适应了==分解问题==思维，适应了==组件化==</li>\n<li></li>\n</ul>\n<ul>\n<li>与设计师确定公司的设计体系，基于less字体库，色系等。</li>\n<li>封装可以==定制化==的，==不影响全局==的React组件</li>\n<li>对React框架内的代码性能进行优化，==Stateless component== => ==PureComponent== => ==Component(shouldUpdateComponent)==</li>\n<li>stateless组件大量使用</li>\n<li>兼容性写法，代码健壮性思考</li>\n</ul>\n<h2 id=\"三、2016不足之处\"><a href=\"#%E4%B8%89%E3%80%812016%E4%B8%8D%E8%B6%B3%E4%B9%8B%E5%A4%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>三、2016不足之处</h2>\n<ul>\n<li>\n<p>GTD时间管理不足</p>\n</li>\n<li>\n<p>执行力不足</p>\n</li>\n<li>\n<p>对代码质量追求不求  </p>\n</li>\n<li>\n<p>适应环境较慢</p>\n</li>\n<li>\n<p>语义化CSS </p>\n</li>\n<li>\n<p>对公用方法使用的不足</p>\n</li>\n<li>\n<p>FQ不稳定</p>\n</li>\n<li>\n<p>对自己的代码管理不足</p>\n</li>\n<li>\n<p>没有深究背后原理</p>\n</li>\n<li>\n<p>想的太多，==Just do it,so TM what？==</p>\n</li>\n<li>\n<p>==2016，混乱，杂序无章，为技术而技术，为业务而业务==</p>\n<h2 id=\"四、2016程序小事例\"><a href=\"#%E5%9B%9B%E3%80%812016%E7%A8%8B%E5%BA%8F%E5%B0%8F%E4%BA%8B%E4%BE%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>四、2016程序小事例</h2>\n<p>小事例：CSS兼容写法。  </p>\n</li>\n<li>\n<p>copy</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">-webkit-transform-origin:@val;\n-moz-transform-origin:@val;\n-ms-transform-origin:@val;\n-o-transform-origin:@val;\ntransform-origin:@val;</code></pre>\n      </div>\n</li>\n<li>\n<p>mixin初级版</p>\n<div class=\"gatsby-highlight\" data-language=\"less\">\n      <pre class=\"language-less\"><code class=\"language-less\"><span class=\"token selector\">.transform-pre(<span class=\"token variable\">@val</span>)</span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">-webkit-transform-origin</span><span class=\"token punctuation\">:</span><span class=\"token variable\">@val</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">-moz-transform-origin</span><span class=\"token punctuation\">:</span><span class=\"token variable\">@val</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">-ms-transform-origin</span><span class=\"token punctuation\">:</span><span class=\"token variable\">@val</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">-o-transform-origin</span><span class=\"token punctuation\">:</span><span class=\"token variable\">@val</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">transform-origin</span><span class=\"token punctuation\">:</span><span class=\"token variable\">@val</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n</li>\n<li>\n<p>mixin中级版</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">.pre(@style,@value) {\n-webkit-@{style}: @value;\n-moz-@{style}: @value;\n-ms-@{style}: @value;\n-o-@{style}: @value;\n@{style}: @value;\n}</code></pre>\n      </div>\n</li>\n<li>\n<p>mixin高级版</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">...？？？</code></pre>\n      </div>\n</li>\n<li>\n<p>CSS后处理器：\n<a href=\"https://github.com/postcss/autoprefixer\">autoprefixer</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">a {\ndisplay: flex;\n}</code></pre>\n      </div>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">a {\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -ms-flexbox;\ndisplay: flex\n}</code></pre>\n      </div>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">* 《西部世界》：机器人写代码（代码写代码）\n\n\n* ==**消除重复劳动**==\n## 五、2017计划，基于 ==**消除重复劳动**==的两点想法\n\n* ==**less is more** ==\n* 公司设计体系的优化、维护及管理：less变量优化、维护及管理\n* Less Mixin复用\n* React核心点之一：==Component-Based==，组件复用\n* 方法的通用性：==函数式方法==\n\n*  ==**团队协作**==现在的沟通成本有点高\n* 减少不必要沟通：==团队内部==，希望推广一种编程范式\n* ==函数式方法== =&gt; ==编程范式：函数式编程==\n* underscore\n* redux源码\n* 组件、方法没有副作用\n* 相互独立而又紧密结合\n\n* 减少不必要沟通：==团队外部==\n* ==沟通：==依靠设计师的标注？试试[Zeplin](https://zeplin.io/)吧\n* ==沟通：==交互设计，试试[Axure RP](http://)\n* 怎么跟设计部门沟通？\n* 怎么跟后台部门沟通？\n* 怎么跟测试部门沟通？\n* 考虑下==团队协作工具？==钉钉？teambition？\n\n* ==**其它**==\n* GTD时间管理执行\n* ==问题===&gt; ==分解问题== =&gt; ==算法== =&gt; ==思维导图==\n* 精力是有限：专注于JS,React,Node技术栈\n* 思考[Mern](http://mern.io/)的使用，基于[React](https://facebook.github.io/react/) + [Node](https://nodejs.org/en/) + [Redux](http://redux.js.org/) + [Express](http://expressjs.com/) + [mongoDB](https://www.mongodb.com/) + [Webpack](https://webpack.github.io/) 的全栈实现，从全栈的角度思考前端。\n* 探究浏览器渲染原理\n* React，性能优化（原材料：CSS,JS,HTML,Img,Font)\n* [sketch](http://xclient.info/s/sketch.html)熟练使用，不依靠设计师标注，减少与设计师不必要沟通\n* ==框架==\n* 热加载：开发效率提升利器，利大于弊\n* Css-module :爸爸再也不用担心CSS类重名✌️ \n* CSS后处理器：\n[autoprefixer](https://github.com/postcss/autoprefixer)</code></pre>\n      </div>\n<p>a {\ndisplay: flex;\n}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\"></code></pre>\n      </div>\n<p>a {\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -ms-flexbox;\ndisplay: flex\n}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">## 五、2017该坚持的\n* 思维导图\n* 代码管理\n* 分解问题\n* 一手资料\n* 看源码\n* 从全栈的角度思考问题\n* 每日[博客](http://www.sunzhiyong.cn)\n## 六、查漏补缺书籍\n* The Art of Readable Code\n![](https://pic2.zhimg.com/c6ddc1aab62766136d098696075056e1_b.png)\n* Clean Code\n![](/content/images/2016/12/6e9064134f8f86b3fc00998d01257add_b.png)\n* The Clean Coder\n![](/content/images/2016/12/b9558b0553d37f116be99242b53b3fe9_b.png)\n* JavaScript: The Good Parts\n![]()\n* Effective JavaScript - 68 Specific Ways to Harness the Power of JavaScript\n![](/content/images/2016/12/aef8e41a2b1a830b2b32935ea9d7d1ac_b.png)\n* JavaScript Patterns\n![](/content/images/2016/12/16a6b931ebf285a1a19ee9d840b4669c_b.png)\n* High Performance JavaScript\n![]()\n* Functional JavaScript ==函数式编程，Underscore,React组件，Redux都渗透着这种思想==\n![](/content/images/2016/12/464ada8f1acb3d7ab80799fa618ec604_b.png)\n* Javascript权威指南\n* 深入理解计算机系统\n* 计算机程序的构造和解释\n* 哥德尔、艾舍尔、巴赫\n* 算法导论\n* 代码大全\n* 编程珠玑\n* 重构\n\n## 七、参考链接 \n1. [Google](https://www.google.com)\n2. [GitHub](https://github.com/)\n2. [Stack Overflow](http://stackoverflow.com/)\n3. [CodePen](codepen.io)\n4. [CSS-Tricks](https://css-tricks.com/)\n5. [MDN](https://developer.mozilla.org)\n\n## 八、很高兴加入平安前端，谢谢各位的帮助\n\n\n## 九、编程是一种艺术，成为一名编程艺术家</code></pre>\n      </div>","timeToRead":3,"excerpt":"一、背景 一直以来，自我感觉，有目标，但是对于具体实现的过程，并没有清晰的短期目标，以及短期目标实现的具体步骤。 趁此机会，静下心来剖析一下自己。看看自身的问题、优势，总结下2106，计划下2017。 二、2016我干了啥 sass，less Konckout…","frontmatter":{"title":"2016年终总结","cover":null,"date":"2016-12-03T22:00:00.000Z","category":"diaries","tags":["diaries","年终总结"]},"fields":{"nextTitle":"对开发的理解","nextSlug":"/diaries/work-summary/","prevTitle":"三体读书笔记","prevSlug":"/books/the-three-body-problem/","slug":"/diaries/2016-summary/","date":"2016-12-02T16:00:00.000Z"}}},"pageContext":{"slug":"/diaries/2016-summary/"}}