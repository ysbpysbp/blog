{"data":{"allMarkdownRemark":{"totalCount":8,"edges":[{"node":{"fields":{"slug":"/javascript/vue/vue/","date":"2018-05-02T16:00:00.000Z"},"excerpt":"指令 v-bind 绑定 v-if 条件 v-for 循环 v-on 添加事件监听器 v-module 实现表单输入和应用状态之间的双向绑定 v-once 指令，你也能执行一次性地插值，当数据改变时，插值处的内容不会更新 Vue 实例 所有的 Vue 组件都是 Vue…","timeToRead":4,"frontmatter":{"title":"vue 学习记录","tags":["JavaScript","vue"],"cover":null,"date":"2018-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/pattern/publish-subscribe/","date":"2018-02-25T16:00:00.000Z"},"excerpt":"  发布---订阅模式又叫观察者模式，它定义了对象间的一种一对多的关系，让多个观察者对象同时监听某一个主题对象，当一个对象发生改变时，所有依赖于它的对象都将得到通知。 日常工作案例   我们日常工作中经常使用到，比如我们的ajax请求，请求有成功(success…","timeToRead":1,"frontmatter":{"title":"发布订阅模式","tags":["JavaScript","pattern"],"cover":null,"date":"2018-02-26T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/priority/priority/","date":"2018-02-25T16:00:00.000Z"},"excerpt":"运算符优先级 运算符 描述 . [] () 字段访问、数组下标、函数调用以及表达式分组 ++ -- - ~ ! delete new typeof void…","timeToRead":1,"frontmatter":{"title":"运算符优先","tags":["JavaScript","priority"],"cover":null,"date":"2018-02-26T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/performance-analysis-method/performanceAnalysisMethod/","date":"2018-02-25T16:00:00.000Z"},"excerpt":"一般情况下，作为开发者，需要对代码性能进行分析，可以使用以下三种方法进行分析。 使用   和  进行分析 比如分析 for 与 map 性能 google chrome Version 62 结果显示如下： 在此种情况下，for循环性能明显比map…","timeToRead":1,"frontmatter":{"title":"js性能分析方法","tags":["JavaScript"],"cover":null,"date":"2018-02-26T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/promise/promise/","date":"2017-10-16T16:00:00.000Z"},"excerpt":"三种状态 pending（进行中）、fulfilled（已成功）和rejected（已失败） 一旦状态改变，就不会再变，任何时候都可以得到这个结果。Promise对象的状态改变，只有两种可能：从pending变为fulfilled和从pending变为rejected…","timeToRead":3,"frontmatter":{"title":"promise","tags":["JavaScript","promise"],"cover":null,"date":"2017-10-17T16:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/call-apply/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"call 比 apply 快的多，下面代码运行结果 google chrome Version 62 结果显示如下： 原因在与.apply在运行前要对作为参数的数组进行一系列检验和深拷贝，.call则没有这些步骤。具体可以参考ECMA . 深拷贝是指将.apply…","timeToRead":2,"frontmatter":{"title":"call 与 apply性能分析","tags":["JavaScript","call vs apply"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/object/object/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"使用for in进行循环时,会枚举对象的所有属性名(或键名).通常你需要检测object.hasOwnProperty(variable)来确定这个属性是该对象的成员还是来自原型链.","timeToRead":1,"frontmatter":{"title":"对象循环自身属性","tags":["Object","JavaScript"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/javascript/tricks/random-color/","date":"2017-05-02T16:00:00.000Z"},"excerpt":"","timeToRead":1,"frontmatter":{"title":"获取随机色","tags":["JavaScript","JavaScript tricks"],"cover":null,"date":"2017-05-03T22:00:00.000Z"}}}]}},"pageContext":{"tag":"JavaScript"}}