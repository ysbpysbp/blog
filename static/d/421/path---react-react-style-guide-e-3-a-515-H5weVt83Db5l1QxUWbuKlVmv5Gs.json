{"data":{"markdownRemark":{"html":"<h2 id=\"规范是必要的\"><a href=\"#%E8%A7%84%E8%8C%83%E6%98%AF%E5%BF%85%E8%A6%81%E7%9A%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>规范是必要的</h2>\n<p>随着react项目代码越来越多，形成一套规范是必要的。结合现有项目，形成一套公用的规范。</p>\n<h2 id=\"react规范\"><a href=\"#react%E8%A7%84%E8%8C%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react规范</h2>\n<h2 id=\"内容目录\"><a href=\"#%E5%86%85%E5%AE%B9%E7%9B%AE%E5%BD%95\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内容目录</h2>\n<ol>\n<li><a href=\"##basic-rules-%E5%9F%BA%E6%9C%AC%E8%A7%84%E8%8C%83\">基本规范</a></li>\n<li><a href=\"##%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9D%97\">Class vs React.createClass vs stateless</a></li>\n<li><a href=\"##naming-%E5%91%BD%E5%90%8D\">命名</a></li>\n<li><a href=\"##declaration-%E5%A3%B0%E6%98%8E%E6%A8%A1%E5%9D%97\">声明模块</a></li>\n<li><a href=\"##alignment-%E4%BB%A3%E7%A0%81%E5%AF%B9%E9%BD%90\">代码对齐</a></li>\n<li><a href=\"##quotes-%E5%8D%95%E5%BC%95%E5%8F%B7%E8%BF%98%E6%98%AF%E5%8F%8C%E5%BC%95%E5%8F%B7\">单引号还是双引号</a></li>\n<li><a href=\"##spacing-%E7%A9%BA%E6%A0%BC\">空格</a></li>\n<li><a href=\"##props-%E5%B1%9E%E6%80%A7\">属性</a></li>\n<li><a href=\"##refs\">Refs引用</a></li>\n<li><a href=\"##parentheses-%E6%8B%AC%E5%8F%B7\">括号</a></li>\n<li><a href=\"##tags-%E6%A0%87%E7%AD%BE\">标签</a></li>\n<li><a href=\"##methods-%E5%87%BD%E6%95%B0\">函数/方法</a></li>\n<li><a href=\"##ordering-react-%E6%A8%A1%E5%9D%97%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\">模块生命周期</a></li>\n<li><a href=\"##ismounted\">isMounted</a></li>\n</ol>\n<h2 id=\"basic-rules-基本规范\"><a href=\"#basic-rules-%E5%9F%BA%E6%9C%AC%E8%A7%84%E8%8C%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Rules 基本规范</h2>\n<ul>\n<li>\n<p>每个文件只写一个模块.</p>\n<ul>\n<li>但是多个<a href=\"https://facebook.github.io/react/docs/reusable-components.html##stateless-functions\">无状态模块</a>可以放在单个文件中. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md##ignorestateless\"><code class=\"language-text\">react/no-multi-comp</code></a>.</li>\n</ul>\n</li>\n<li>推荐使用JSX语法.</li>\n<li>不要使用 <code class=\"language-text\">React.createElement</code>，除非从一个非JSX的文件中初始化你的app.</li>\n</ul>\n<h2 id=\"创建模块\"><a href=\"#%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9D%97\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>创建模块</h2>\n<p>   Class vs React.createClass vs stateless  </p>\n<ul>\n<li>\n<p>如果你的模块有内部状态或者是<code class=\"language-text\">refs</code>, 推荐使用 <code class=\"language-text\">class extends React.Component</code> 而不是 <code class=\"language-text\">React.createClass</code> ,除非你有充足的理由来使用这些方法.<br>\neslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-es6-class.md\"><code class=\"language-text\">react/prefer-es6-class</code></a> <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-stateless-function.md\"><code class=\"language-text\">react/prefer-stateless-function</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">const</span> Listing <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>hello<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Listing</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>hello<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>如果你的模块没有状态或是没有引用<code class=\"language-text\">refs</code>， 推荐使用普通函数（非箭头函数）而不是类:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Listing</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>hello<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// bad (relying on function name inference is discouraged)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Listing</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> hello <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>hello<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Listing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> hello <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>hello<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n</li>\n</ul>\n<h2 id=\"naming-命名\"><a href=\"#naming-%E5%91%BD%E5%90%8D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Naming 命名</h2>\n<ul>\n<li>\n<p><strong>扩展名</strong>: 本项目中，React模块使用 <code class=\"language-text\">.js</code> 扩展名.\n - <strong>文件名</strong>: 文件名使用帕斯卡命名. 如, <code class=\"language-text\">ReservationCard.js</code>.\n - <strong>引用命名</strong>: React模块名使用帕斯卡命名，实例使用骆驼式命名. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-pascal-case.md\"><code class=\"language-text\">react/jsx-pascal-case</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> reservationCard <span class=\"token keyword\">from</span> <span class=\"token string\">'./ReservationCard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">import</span> ReservationCard <span class=\"token keyword\">from</span> <span class=\"token string\">'./ReservationCard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">const</span> ReservationItem <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ReservationCard <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">const</span> reservationItem <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ReservationCard <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p><strong>模块命名</strong>: 模块使用当前文件名一样的名称. 比如 <code class=\"language-text\">ReservationCard.js</code> 应该包含名为 <code class=\"language-text\">ReservationCard</code>的模块. 但是，如果整个文件夹是一个模块，使用 <code class=\"language-text\">index.js</code>作为入口文件，然后直接使用 <code class=\"language-text\">index.js</code> 或者文件夹名作为模块的名称:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> Footer <span class=\"token keyword\">from</span> <span class=\"token string\">'./Footer/Footer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> Footer <span class=\"token keyword\">from</span> <span class=\"token string\">'./Footer/index'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">import</span> Footer <span class=\"token keyword\">from</span> <span class=\"token string\">'./Footer'</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p><strong>高阶模块命名</strong>: 对于生成一个新的模块，其中的模块名 <code class=\"language-text\">displayName</code> 应该为高阶模块名和传入模块名的组合. 例如, 高阶模块 <code class=\"language-text\">withFoo()</code>, 当传入一个 <code class=\"language-text\">Bar</code> 模块的时候， 生成的模块名 <code class=\"language-text\">displayName</code> 应该为 <code class=\"language-text\">withFoo(Bar)</code>.</p>\n</li>\n</ul>\n<blockquote>\n<p>为什么？一个模块的 <code class=\"language-text\">displayName</code> 可能会在开发者工具或者错误信息中使用到，因此有一个能清楚的表达这层关系的值能帮助我们更好的理解模块发生了什么，更好的Debug.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">withFoo</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">WithFoo</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>WrappedComponent</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">foo</span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">withFoo</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">WithFoo</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>WrappedComponent</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">foo</span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> wrappedComponentName <span class=\"token operator\">=</span> WrappedComponent<span class=\"token punctuation\">.</span>displayName\n    <span class=\"token operator\">||</span> WrappedComponent<span class=\"token punctuation\">.</span>name\n    <span class=\"token operator\">||</span> <span class=\"token string\">'Component'</span><span class=\"token punctuation\">;</span>\n\n  WithFoo<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`withFoo(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wrappedComponentName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> WithFoo<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<ul>\n<li><strong>属性命名</strong>: 避免使用DOM相关的属性来用作其他的用途。</li>\n</ul>\n<blockquote>\n<p>为什么？对于<code class=\"language-text\">style</code> 和 <code class=\"language-text\">className</code>这样的属性名，我们都会默认它们代表一些特殊的含义，如元素的样式，CSS class的名称。在你的应用中使用这些属性来表示其他的含义会使你的代码更难阅读，更难维护，并且可能会引起bug。</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// bad</span>\n<span class=\"token operator\">&lt;</span>MyComponent style<span class=\"token operator\">=</span><span class=\"token string\">\"fancy\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token operator\">&lt;</span>MyComponent variant<span class=\"token operator\">=</span><span class=\"token string\">\"fancy\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre>\n      </div>\n<h2 id=\"declaration-声明模块\"><a href=\"#declaration-%E5%A3%B0%E6%98%8E%E6%A8%A1%E5%9D%97\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Declaration 声明模块</h2>\n<ul>\n<li>\n<p>不要使用 <code class=\"language-text\">displayName</code> 来命名React模块，而是使用引用来命名模块， 如 class 名称.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  displayName<span class=\"token punctuation\">:</span> <span class=\"token string\">'ReservationCard'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// stuff goes here</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ReservationCard</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n</li>\n</ul>\n<h2 id=\"alignment-代码对齐\"><a href=\"#alignment-%E4%BB%A3%E7%A0%81%E5%AF%B9%E9%BD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Alignment 代码对齐</h2>\n<ul>\n<li>\n<p>遵循以下的JSX语法缩进/格式. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md\"><code class=\"language-text\">react/jsx-closing-bracket-location</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">superLongParam</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\">anotherSuperLongParam</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>baz<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good, 有多行属性的话, 新建一行关闭标签</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">superLongParam</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">anotherSuperLongParam</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>baz<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// 若能在一行中显示, 直接写成一行</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">bar</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// 子元素按照常规方式缩进</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">superLongParam</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">anotherSuperLongParam</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>baz<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Quux</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Foo</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n</li>\n</ul>\n<h2 id=\"quotes-单引号还是双引号\"><a href=\"#quotes-%E5%8D%95%E5%BC%95%E5%8F%B7%E8%BF%98%E6%98%AF%E5%8F%8C%E5%BC%95%E5%8F%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quotes 单引号还是双引号</h2>\n<ul>\n<li>对于JSX属性值总是使用双引号(<code class=\"language-text\">&quot;</code>), 其他均使用单引号(<code class=\"language-text\">&#39;</code>). eslint: <a href=\"http://eslint.org/docs/rules/jsx-quotes\"><code class=\"language-text\">jsx-quotes</code></a></li>\n</ul>\n<blockquote>\n<p>为什么? HTML属性也是用双引号, 因此JSX的属性也遵循此约定.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">bar</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>bar<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">bar</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> left<span class=\"token punctuation\">:</span> <span class=\"token string\">\"20px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> left<span class=\"token punctuation\">:</span> <span class=\"token string\">'20px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<h2 id=\"spacing-空格\"><a href=\"#spacing-%E7%A9%BA%E6%A0%BC\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spacing 空格</h2>\n<ul>\n<li>\n<p>总是在自动关闭的标签前加一个空格，正常情况下也不需要换行. eslint: <a href=\"http://eslint.org/docs/rules/no-multi-spaces\"><code class=\"language-text\">no-multi-spaces</code></a>, <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-space-before-closing.md\"><code class=\"language-text\">react/jsx-space-before-closing</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span><span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// very bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>                 <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p>不要在JSX <code class=\"language-text\">{}</code> 引用括号里两边加空格. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-spacing.md\"><code class=\"language-text\">react/jsx-curly-spacing</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">bar</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> baz <span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">bar</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>baz<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n</li>\n</ul>\n<h2 id=\"props-属性\"><a href=\"#props-%E5%B1%9E%E6%80%A7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Props 属性</h2>\n<ul>\n<li>\n<p>JSX属性名使用骆驼式风格<code class=\"language-text\">camelCase</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">UserName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hello<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">phone_number</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">12345678</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">userName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hello<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">phoneNumber</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">12345678</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p>如果属性值为 <code class=\"language-text\">true</code>, 可以直接省略. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md\"><code class=\"language-text\">react/jsx-boolean-value</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">hidden</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">hidden</span>\n<span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p><code class=\"language-text\">&lt;img&gt;</code> 标签总是添加 <code class=\"language-text\">alt</code> 属性. 如果图片以presentation(感觉是以类似PPT方式显示?)方式显示，<code class=\"language-text\">alt</code> 可为空, 或者<code class=\"language-text\">&lt;img&gt;</code> 要包含<code class=\"language-text\">role=&quot;presentation&quot;</code>. eslint: <a href=\"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/img-has-alt.md\"><code class=\"language-text\">jsx-a11y/img-has-alt</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hello.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hello.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Me waving hello<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hello.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hello.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>presentation<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p>不要在 <code class=\"language-text\">alt</code> 值里使用如 \"image\", \"photo\", or \"picture\"包括图片含义这样的词， 中文也一样. eslint: <a href=\"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/img-redundant-alt.md\"><code class=\"language-text\">jsx-a11y/img-redundant-alt</code></a></p>\n</li>\n</ul>\n<blockquote>\n<p>为什么? 屏幕助读器已经把 <code class=\"language-text\">img</code> 标签标注为图片了, 所以没有必要再在 <code class=\"language-text\">alt</code> 里说明了.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hello.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Picture of me waving hello<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hello.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Me waving hello<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<ul>\n<li>\n<p>使用有效正确的 aria <code class=\"language-text\">role</code>属性值 <a href=\"https://www.w3.org/TR/wai-aria/roles##role_definitions\">ARIA roles</a>. eslint: <a href=\"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-role.md\"><code class=\"language-text\">jsx-a11y/aria-role</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad - not an ARIA role</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>datepicker<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// bad - abstract ARIA role</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>range<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p>不要在标签上使用 <code class=\"language-text\">accessKey</code> 属性. eslint: <a href=\"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-access-key.md\"><code class=\"language-text\">jsx-a11y/no-access-key</code></a></p>\n</li>\n</ul>\n<blockquote>\n<p>为什么? 屏幕助读器在键盘快捷键与键盘命令时造成的不统一性会导致阅读性更加复杂.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">accessKey</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>h<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<ul>\n<li>避免使用数组的index来作为属性<code class=\"language-text\">key</code>的值，推荐使用唯一ID. (<a href=\"https://medium.com/@robinpokorny/index-as-a-key-is-an-anti-pattern-e0349aece318\">为什么?</a>)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Todo</span>\n    <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">todo</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>todo <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Todo</span>\n    <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">todo</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<ul>\n<li>对于所有非必须的属性，总是手动去定义<code class=\"language-text\">defaultProps</code>属性.</li>\n</ul>\n<blockquote>\n<p>为什么? propTypes 可以作为模块的文档说明, 并且声明 defaultProps 的话意味着阅读代码的人不需要去假设一些默认值。更重要的是, 显示的声明默认属性可以让你的模块跳过属性类型的检查.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">function</span> <span class=\"token constant\">SFC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>foo<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>bar<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token constant\">SFC</span><span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  foo<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  bar<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n  children<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">function</span> <span class=\"token constant\">SFC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">,</span> bar <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>foo<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>bar<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token constant\">SFC</span><span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  foo<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  bar<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">SFC</span><span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  bar<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  children<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2 id=\"refs\"><a href=\"#refs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Refs</h2>\n<ul>\n<li>\n<p>总是在Refs里使用回调函数. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-string-refs.md\"><code class=\"language-text\">react/no-string-refs</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myRef<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>myRef <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n</li>\n</ul>\n<h2 id=\"parentheses-括号\"><a href=\"#parentheses-%E6%8B%AC%E5%8F%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parentheses 括号</h2>\n<ul>\n<li>\n<p>将多行的JSX标签写在 <code class=\"language-text\">()</code>里. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/wrap-multilines.md\"><code class=\"language-text\">react/wrap-multilines</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyComponent</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>long body<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">foo</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyChild</span> <span class=\"token punctuation\">/></span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MyComponent</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyComponent</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>long body<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">foo</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyChild</span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MyComponent</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good, 单行可以不需要</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>hello<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyComponent</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>body<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MyComponent</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n</li>\n</ul>\n<h2 id=\"tags-标签\"><a href=\"#tags-%E6%A0%87%E7%AD%BE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tags 标签</h2>\n<ul>\n<li>\n<p>对于没有子元素的标签来说总是自己关闭标签. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md\"><code class=\"language-text\">react/self-closing-comp</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stuff<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Foo</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stuff<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p>如果模块有多行的属性， 关闭标签时新建一行. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md\"><code class=\"language-text\">react/jsx-closing-bracket-location</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">bar</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">baz</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>baz<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo</span>\n  <span class=\"token attr-name\">bar</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">baz</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>baz<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n</li>\n</ul>\n<h2 id=\"methods-函数\"><a href=\"#methods-%E5%87%BD%E6%95%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods 函数</h2>\n<ul>\n<li>\n<p>使用箭头函数来获取本地变量.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">ItemList</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Item</span>\n          <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">doSomethingWith</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n</li>\n<li>\n<p>当在 <code class=\"language-text\">render()</code> 里使用事件处理方法时，提前在构造函数里把 <code class=\"language-text\">this</code> 绑定上去. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md\"><code class=\"language-text\">react/jsx-no-bind</code></a></p>\n</li>\n</ul>\n<blockquote>\n<p>为什么? 在每次 <code class=\"language-text\">render</code> 过程中， 再调用 <code class=\"language-text\">bind</code> 都会新建一个新的函数，浪费资源.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onClickDiv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do stuff</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickDiv<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickDiv <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickDiv<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onClickDiv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do stuff</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickDiv<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<ul>\n<li>\n<p>在React模块中，不要给所谓的私有函数添加 <code class=\"language-text\">_</code> 前缀，本质上它并不是私有的.</p>\n<blockquote>\n<p>为什么？<code class=\"language-text\">_</code> 下划线前缀在某些语言中通常被用来表示私有变量或者函数。但是不像其他的一些语言，在JS中没有原生支持所谓的私有变量，所有的变量函数都是共有的。尽管你的意图是使它私有化，在之前加上下划线并不会使这些变量私有化，并且所有的属性（包括有下划线前缀及没有前缀的）都应该被视为是共有的。</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\nReact<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">_onClickSubmit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do stuff</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// other stuff</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onClickSubmit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do stuff</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// other stuff</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n</li>\n<li>\n<p>在 <code class=\"language-text\">render</code> 方法中总是确保 <code class=\"language-text\">return</code> 返回值. eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/require-render-return.md\"><code class=\"language-text\">react/require-render-return</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n</li>\n</ul>\n<h2 id=\"ordering-react-模块生命周期\"><a href=\"#ordering-react-%E6%A8%A1%E5%9D%97%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ordering React 模块生命周期</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">class extends React.Component</code> 的生命周期函数:</p>\n</li>\n<li>\n<p>可选的 <code class=\"language-text\">static</code> 方法</p>\n</li>\n<li>\n<p><code class=\"language-text\">constructor</code> 构造函数</p>\n</li>\n<li>\n<p><code class=\"language-text\">getChildContext</code> 获取子元素内容</p>\n</li>\n<li>\n<p><code class=\"language-text\">componentWillMount</code> 模块渲染前</p>\n</li>\n<li>\n<p><code class=\"language-text\">componentDidMount</code> 模块渲染后</p>\n</li>\n<li>\n<p><code class=\"language-text\">componentWillReceiveProps</code> 模块将接受新的数据</p>\n</li>\n<li>\n<p><code class=\"language-text\">shouldComponentUpdate</code> 判断模块需不需要重新渲染</p>\n</li>\n<li>\n<p><code class=\"language-text\">componentWillUpdate</code> 上面的方法返回 <code class=\"language-text\">true</code>， 模块将重新渲染</p>\n</li>\n<li>\n<p><code class=\"language-text\">componentDidUpdate</code> 模块渲染结束</p>\n</li>\n<li>\n<p><code class=\"language-text\">componentWillUnmount</code> 模块将从DOM中清除, 做一些清理任务</p>\n</li>\n<li>\n<p><em>点击回调或者事件处理器</em> 如 <code class=\"language-text\">onClickSubmit()</code> 或 <code class=\"language-text\">onChangeDescription()</code></p>\n</li>\n<li>\n<p><em><code class=\"language-text\">render</code> 里的 getter 方法</em> 如 <code class=\"language-text\">getSelectReason()</code> 或 <code class=\"language-text\">getFooterContent()</code></p>\n</li>\n<li>\n<p><em>可选的 render 方法</em> 如 <code class=\"language-text\">renderNavigation()</code> 或 <code class=\"language-text\">renderProfilePicture()</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">render</code> render() 方法</p>\n</li>\n<li>\n<p>如何定义 <code class=\"language-text\">propTypes</code>, <code class=\"language-text\">defaultProps</code>, <code class=\"language-text\">contextTypes</code>, 等等其他属性...</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> PropTypes <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  url<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  text<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  text<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Link</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">methodsAreOk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">data-id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nLink<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> propTypes<span class=\"token punctuation\">;</span>\nLink<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> defaultProps<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Link<span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p><code class=\"language-text\">React.createClass</code> 的生命周期函数，与使用class稍有不同: eslint: <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md\"><code class=\"language-text\">react/sort-comp</code></a></p>\n</li>\n<li>\n<p><code class=\"language-text\">displayName</code> 设定模块名称</p>\n</li>\n<li>\n<p><code class=\"language-text\">propTypes</code> 设置属性的类型</p>\n</li>\n<li>\n<p><code class=\"language-text\">contextTypes</code> 设置上下文类型</p>\n</li>\n<li>\n<p><code class=\"language-text\">childContextTypes</code> 设置子元素上下文类型</p>\n</li>\n<li>\n<p><code class=\"language-text\">mixins</code> 添加一些mixins</p>\n</li>\n<li>\n<p><code class=\"language-text\">statics</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">defaultProps</code> 设置默认的属性值</p>\n</li>\n<li>\n<p><code class=\"language-text\">getDefaultProps</code> 获取默认属性值</p>\n</li>\n<li>\n<p><code class=\"language-text\">getInitialState</code> 或者初始状态</p>\n</li>\n<li>\n<p><code class=\"language-text\">getChildContext</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">componentWillMount</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">componentDidMount</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">componentWillReceiveProps</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">shouldComponentUpdate</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">componentWillUpdate</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">componentDidUpdate</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">componentWillUnmount</code></p>\n</li>\n<li>\n<p><em>clickHandlers or eventHandlers</em> like <code class=\"language-text\">onClickSubmit()</code> or <code class=\"language-text\">onChangeDescription()</code></p>\n</li>\n<li>\n<p><em>getter methods for <code class=\"language-text\">render</code></em> like <code class=\"language-text\">getSelectReason()</code> or <code class=\"language-text\">getFooterContent()</code></p>\n</li>\n<li>\n<p><em>Optional render methods</em> like <code class=\"language-text\">renderNavigation()</code> or <code class=\"language-text\">renderProfilePicture()</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">render</code></p>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考链接</h2>\n<ol>\n<li><a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-es6-class.md\">https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-es6-class.md</a></li>\n</ol>","timeToRead":13,"excerpt":"规范是必要的 随着react项目代码越来越多，形成一套规范是必要的。结合现有项目，形成一套公用的规范。 react规范 内容目录 基本规范 Class vs React.createClass vs stateless…","frontmatter":{"title":"react风格","cover":null,"date":"2017-08-27T11:06:14.000Z","category":"react","tags":["react"]},"fields":{"nextTitle":"在阿里云 ECS Centos6.5上搭建Ghost博客系统,以及nodejs版本控制工具安装","nextSlug":"/blog/ghost/","prevTitle":"Webstorm Setting","prevSlug":"/tools/webstorm/webstorm/","slug":"/react/react-style-guide/","date":"2017-08-26T16:00:00.000Z"}}},"pageContext":{"slug":"/react/react-style-guide/"}}