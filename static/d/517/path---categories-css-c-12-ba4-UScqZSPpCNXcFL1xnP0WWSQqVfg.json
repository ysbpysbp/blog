{"data":{"allMarkdownRemark":{"totalCount":16,"edges":[{"node":{"fields":{"slug":"/css/block-inline-element/","date":"2017-02-06T16:00:00.000Z"},"excerpt":"一、各种元素的width height margin padding 特性（具体css元素的分来参看二）\n1.块级元素\nwidth、 height、 margin的四个方向、 padding的四个方向都正常显示，遵循标准的css盒模型。例如：div 2.行内替换元素\nwidth…","timeToRead":1,"frontmatter":{"title":"block inline element","tags":["css"],"cover":null,"date":"2017-02-07T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/centering-in-css/","date":"2017-02-06T16:00:00.000Z"},"excerpt":"CSS 居中 1. 水平居中 inline或者inline-*元素 块级元素 2. 垂直居中 inline或者inline-*元素 仅仅是一行 多行 块级元素 已知元素的高度 未知元素的高度 使用flex 3 水平垂直居中 元素宽高固定 .child {\n  width…","timeToRead":2,"frontmatter":{"title":"css居中","tags":["css"],"cover":null,"date":"2017-02-07T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/clearFloat/","date":"2017-02-06T16:00:00.000Z"},"excerpt":"","timeToRead":1,"frontmatter":{"title":"清除浮动的方法","tags":["css"],"cover":null,"date":"2017-02-07T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/css-write-guides/","date":"2017-02-06T16:00:00.000Z"},"excerpt":"原则 建立自己的书写规范 不要动态生成css样式,可以动态生成类,但是也要少用 写公用样式,别用文档结构嵌套css选择器来写,写公用类 尽力不用important 重构必须重写公用样式 流程来规范,你的做事","timeToRead":1,"frontmatter":{"title":"css书写原则","tags":["css书写原则"],"cover":null,"date":"2017-02-07T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/skills/center/","date":"2017-02-06T16:00:00.000Z"},"excerpt":"1 底部对齐,父元素position:relative;,子元素position:absolut;bottom:0;\n2 底部居中:看如下类: Absolute-Center","timeToRead":1,"frontmatter":{"title":"底部垂直居中","tags":["css"],"cover":null,"date":"2017-02-07T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/skills/inline-element-characteristics/","date":"2017-02-06T16:00:00.000Z"},"excerpt":"left 和 top 只有在 定位元素 上才会起作用。\n定位：\nposition：static | relative | absolute | fixed\n默认值：static\n适用于：除display属性定义为table-column-group | table-column…","timeToRead":1,"frontmatter":{"title":"行内元素的特点","tags":["css"],"cover":null,"date":"2017-02-07T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/skills/inline-element-factor/","date":"2017-02-06T16:00:00.000Z"},"excerpt":"…","timeToRead":1,"frontmatter":{"title":"行内元素的特点","tags":["css"],"cover":null,"date":"2017-02-07T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/skills/layout/","date":"2017-02-06T16:00:00.000Z"},"excerpt":"两列布局（左边固定，右边自适应） 左边float-left，右侧margin","timeToRead":1,"frontmatter":{"title":"css 布局","tags":["css"],"cover":null,"date":"2017-02-07T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/skills/rem/","date":"2017-02-06T16:00:00.000Z"},"excerpt":"rem的一句话,使用它可以让你使用长度的地方,基于html的fontsize的值 比如说html的font-size:100px;你再次页面使用设置其他的为1rem,长度即为\n1*100px 所有说,我们改变在不同的设备,窗口使用不同的html的font-size…","timeToRead":1,"frontmatter":{"title":"rem实现原理","tags":["css","rem"],"cover":null,"date":"2017-02-07T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/css-design-pattern/","date":"2017-02-03T16:00:00.000Z"},"excerpt":"背景 思考css的设计模式 SMACSS——Scalable and Modular Architecture for CSS 它的核心是： 1、Base（基础）\n基础的样式，就是一些需要最先定义好，针对于某一类元素的通用固定样式。 2、Layout…","timeToRead":1,"frontmatter":{"title":"css设计模式","tags":["css","css设计模式"],"cover":null,"date":"2017-02-04T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/selecter/","date":"2017-02-03T16:00:00.000Z"},"excerpt":"not first child 方法1：ie6-8 不能使用 方法2：从1开始 方法3： div+p（选择紧接在   元素之后的所有   元素。） 方法4： b~p，匹配所有在#b元素之后的同级p元素。 方法5：.item:not(:first-of-type…","timeToRead":1,"frontmatter":{"title":"css 选择器","tags":["css选择器"],"cover":null,"date":"2017-02-04T10:08:29.000Z"}}},{"node":{"fields":{"slug":"/css/animation/","date":"2017-02-02T16:00:00.000Z"},"excerpt":"动画 css3 中实现动画一般使用 transition 以及 animation transition transition可以实现动态效果，实际上是一定时间之内，一组css属性变换到另一组属性的动画展示过程。 为了使transition…","timeToRead":1,"frontmatter":{"title":"动画","tags":["css"],"cover":null,"date":"2017-02-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/flex/flex/","date":"2017-02-02T16:00:00.000Z"},"excerpt":"一、容器的属性 属性 描述 flex-direction 决定主轴的方向（即项目的排列方向）。 flex-wrap 默认情况下，项目都排在一条线（又称\"轴线\"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。 flex-flow 属性是flex-direction…","timeToRead":2,"frontmatter":{"title":"flex","tags":["flex"],"cover":null,"date":"2017-02-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/iconfont/iconfont/","date":"2017-02-02T16:00:00.000Z"},"excerpt":"兼容问题 字体声明，由于各个浏览器所支持的字体文件不同，因此我们要针对浏览器的这个特点制作多种字体文件以达到兼容的目的 网页中显示 一种是直接在html中输入相应的Icon所代表的字体，好处是兼容所有浏览器，就是在更改Icon的时候需要下游的后端程序员同事协助更改。 在CSS…","timeToRead":1,"frontmatter":{"title":"icon font","tags":["css","icon font"],"cover":null,"date":"2017-02-03T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/font-weight/","date":"2017-01-19T16:00:00.000Z"},"excerpt":"font weight 数值名称对应表 数值 对应名称 100 Thin (Hairline) 200 Extra Light (Ultra Light) 300 Light 400 Normal 500 Medium 600 Semi Bold (Demi Bold) 70…","timeToRead":1,"frontmatter":{"title":"font weight 数值名称对应表","tags":["font weight"],"cover":null,"date":"2017-01-20T22:00:00.000Z"}}},{"node":{"fields":{"slug":"/css/overflow/","date":"2017-01-19T16:00:00.000Z"},"excerpt":"背景 在一次开发过程中，对一个元素设置CSS   and   ，理想状况下，在X轴超出部分隐藏，Y轴超出部分显示。然而，元素属性并没有生效。 原因 根据 W3C 的说法，如下 The computed values of ‘overflow-x’ and ‘overflow-y…","timeToRead":1,"frontmatter":{"title":"对同一元素设置overflow-x:hidden,overflow-y:visible;属性值不生效","tags":["css"],"cover":null,"date":"2017-01-20T22:00:00.000Z"}}}]}},"pageContext":{"category":"css"}}