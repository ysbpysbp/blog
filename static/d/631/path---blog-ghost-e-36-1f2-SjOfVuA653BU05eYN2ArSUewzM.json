{"data":{"markdownRemark":{"html":"<p>1 任何信息都有时效性,本文写于2016.3.20凌晨\n2 不建议参考本文,请直接参考官方英文文档. <a href=\"http://ghost.org\">http://ghost.org</a></p>\n<p>笔者在搭建服务器之前,刚刚接触前端开发半年,对于服务器搭建,nodejs,linux命令等完全是小白,完全靠google 百度,以及自己摸索.</p>\n<h5 id=\"一-服务器购买及域名购买及解析\"><a href=\"#%E4%B8%80-%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B4%AD%E4%B9%B0%E5%8F%8A%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E8%A7%A3%E6%9E%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一 服务器购买及域名购买及解析</h5>\n<p>1 服务器,直接阿里云服务器,笔者买了入门1M 1G 1核的Centos6.5 ECS服务器.服务器放在深圳(不要担心备案的是,只不过是有点麻烦),便宜.\n2 域名购买及解析\n域名购买,直接在万网上购买就可以,我的域名就是<a href=\"http://sunzhiyong.cn\">http://sunzhiyong.cn</a>\n29元第一年.域名购买了之后,就实名认证域名.\n解析:打开阿里云管理控制台,进入云解析,然后将你购买的域名解析到你的服务器(因为,计算机里面都是通过ip地址来访问你的服务器的,要让你的服务器能通过域名来访问你的服务器,需要将域名跟ip对应起来).解析的时候,同时添加'www'及'@'记录.都很傻瓜式的操作,按照提示就可以完成.</p>\n<h5 id=\"二-服务器node环境的搭建\"><a href=\"#%E4%BA%8C-%E6%9C%8D%E5%8A%A1%E5%99%A8node%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>二 服务器node环境的搭建</h5>\n<p>Ghost是基于Node.js构建的开源博客平台，所以我们首先搭建Node环境。\n我们首先下载xsheel,然后根据提示连接到你的服务器.IP在阿里云管理控制台查看.\n然后逐行执行以下命令:\n<code>\nwget <a href=\"http://nodejs.org/dist/v0.10.40/node-v0.10.40.tar.gz\">http://nodejs.org/dist/v0.10.40/node-v0.10.40.tar.gz</a><br>\ntar zxvf node-v0.10.40.tar.gz<br>\ncd node-v0.10.40<br>\n./configure\nmake &#x26;&#x26; make install\n</code>\n命令执行完毕之后，检测一下环境是否搭建成功,以及查看以下版本信息.\n执行:\n<code>\nnode -v\n</code>\n显示v0.10.40,就说明环境搭建成功.</p>\n<h5 id=\"配置nginx\"><a href=\"#%E9%85%8D%E7%BD%AEnginx\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置Nginx</h5>\n<p>安装好了nginx后，我们需要设置一个代理服务器让我们的博客可以使用域名访问。 在/etc/nginx/conf.d目录下创建一个配置文件ghost.conf：\n执行:\n<code>\nvi /etc/nginx/conf.d/ghost.conf\n</code>\n写入以下内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">server {  \n    listen 80;\n    server_name example.com; #将 example.com 改为你的域名或ip。\n\n    location / {\n        proxy_set_header   X-Real-IP $remote_addr;\n        proxy_set_header   Host      $http_host;\n        proxy_pass         http://127.0.0.1:2368;\n    }\n}</code></pre>\n      </div>\n<p>保存退出，重启nginx：</p>\n<p>执行\n<code>\nservice nginx restart<br>\n</code>\n没有错误就ok了.</p>\n<p>有的人会安装MySQL,对于小白来说,感觉没有必要,我们尽快搭建好博客系统.</p>\n<h5 id=\"四-安装ghost\"><a href=\"#%E5%9B%9B-%E5%AE%89%E8%A3%85ghost\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>四 安装Ghost</h5>\n<p>这时候我们就需要安装ghost,我们用的是中文版本的.首先要下载,逐行执行:\n<code>\nmkdir var\ncd var\nmkdir www\ncd www\nwget <a href=\"http://dl.ghostchina.com/Ghost-0.7.4-zh-full.zip\">http://dl.ghostchina.com/Ghost-0.7.4-zh-full.zip</a><br>\nunzip Ghost-0.7.4-zh-full.zip -d ghost<br>\ncd ghost<br>\n</code>\n接着修改默认配置,逐行执行:\n<code>\ncp config.example.js config.js<br>\nvi config.js\n</code>\nGhost有产品模式、开发模式和测试模式等多种运行模式，这里我们需要在配置文件中找到production模式：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\"># 生产模式\nproduction: {  \n    url: &#39;http://snowz.me&#39;, # 修改为你的域名或者IP，注意加上http://\n    mail: {},\n    database: {\n        client: &#39;mysql&#39;\n        connection: {\n            host     : &#39;127.0.0.1&#39;,\n            user     : &#39;ghost&#39;, # 数据库连接的用户\n            password : &#39;123456&#39;, # 先前创建的密码\n            database : &#39;ghost&#39;, # 先前创建的数据库\n            charset  : &#39;utf8&#39;\n        },\n    server: {\n            host: &#39;127.0.0.1&#39;,\n            port: &#39;2368&#39; # 若修改该端口记得在nginx中做相应改变\n        }\n    }  </code></pre>\n      </div>\n<p>保存退出，接下来就到了见证奇迹的时刻啦，输入指令执行：\n<code>\nnpm start --production<br>\n</code>\n启动浏览器，输入之前配置的域名或者IP，我们就可以看到建立好的Ghost博客啦。 （Ctrl+C 中断掉开发者模式）</p>\n<h5 id=\"五-让ghost保持运行之nvmnode版本控制工具安装\"><a href=\"#%E4%BA%94-%E8%AE%A9ghost%E4%BF%9D%E6%8C%81%E8%BF%90%E8%A1%8C%E4%B9%8Bnvmnode%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>五 让Ghost保持运行之nvm(node版本控制工具)安装</h5>\n<p>前面提到的启动 Ghost 使用 npm start --production 命令。这是一个在开发模式下启动和测试的不错的选择，但是通过这种命令行启动的方式有个缺点，即当你关闭终端窗口或者从 SSH 断开连接时，Ghost 就停止了。为了防止 Ghost 停止工作，我们得解决这个问题。</p>\n<p>接下来安装forever,执行：\n<code>\nnpm install -g forever\n</code>\n你会发现提示说,你当前node版本是v0.10.40,而forever需要的版本则是,0.12以上的版本.这样的话,我们怎么办呢,一个方法就是格式化服务器,然后我们装一个高级的版本,但是这样的话,我们以上的努力就白费.另一个方法就是我升级一下nodejs版本. </p>\n<p>nodejs升级,这时候我们就需要node 版本管理工具,这里我们介绍nvm(Node Version Manager 我们参考git:<a href=\"https://github.com/creationix/nvm\">https://github.com/creationix/nvm</a>),各位读者,在安装的时候请务必参考此网址文档.</p>\n<p>首先我们Install script,我们来安装,在centos下直接执行代码:\n<code>\nwget -qO- <a href=\"https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh\">https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh</a> | bash\n</code>\n完成之后,我们执行:</p>\n<p><code>nvp</code></p>\n<p>如果发现找不到nvm命令,我们需要执行</p>\n<p><code>touch ~/.bash_profile</code></p>\n<p>(参考:Note: On OSX, if you get nvm: command not found after running the install script, your system may not have a [.bash_profile file] where the command is set up. Simple create one with touch ~/.bash_profile and run the install script again.)</p>\n<p>然后我们重启连接就可以.</p>\n<h5 id=\"六-让ghost保持运行之安装新版本node-v424\"><a href=\"#%E5%85%AD-%E8%AE%A9ghost%E4%BF%9D%E6%8C%81%E8%BF%90%E8%A1%8C%E4%B9%8B%E5%AE%89%E8%A3%85%E6%96%B0%E7%89%88%E6%9C%ACnode-v424\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>六 让Ghost保持运行之安装新版本node V4.2.4</h5>\n<p>安装好nvm之后,我们就利用nvm来管理我们的node版本.\n以下是nvm的参考</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">Node Version Manager\n\nNote: &lt;version&gt; refers to any version-like string nvm understands. This includes:\n  - full or partial version numbers, starting with an optional &quot;v&quot; (0.10, v0.1.2, v1)\n  - default (built-in) aliases: node, stable, unstable, iojs, system\n  - custom aliases you define with `nvm alias foo`\n\nUsage:\n  nvm help                                  Show this message\n  nvm --version                             Print out the latest released version of nvm\n  nvm install [-s] &lt;version&gt;                Download and install a &lt;version&gt;, [-s] from source. Uses .nvmrc if available\n    --reinstall-packages-from=&lt;version&gt;     When installing, reinstall packages installed in &lt;node|iojs|node version number&gt;\n  nvm uninstall &lt;version&gt;                   Uninstall a version\n  nvm use [--silent] &lt;version&gt;              Modify PATH to use &lt;version&gt;. Uses .nvmrc if available\n  nvm exec [--silent] &lt;version&gt; [&lt;command&gt;] Run &lt;command&gt; on &lt;version&gt;. Uses .nvmrc if available\n  nvm run [--silent] &lt;version&gt; [&lt;args&gt;]     Run `node` on &lt;version&gt; with &lt;args&gt; as arguments. Uses .nvmrc if available\n  nvm current                               Display currently activated version\n  nvm ls                                    List installed versions\n  nvm ls &lt;version&gt;                          List versions matching a given description\n  nvm ls-remote                             List remote versions available for install\n  nvm version &lt;version&gt;                     Resolve the given description to a single local version\n  nvm version-remote &lt;version&gt;              Resolve the given description to a single remote version\n  nvm deactivate                            Undo effects of `nvm` on current shell\n  nvm alias [&lt;pattern&gt;]                     Show all aliases beginning with &lt;pattern&gt;\n  nvm alias &lt;name&gt; &lt;version&gt;                Set an alias named &lt;name&gt; pointing to &lt;version&gt;\n  nvm unalias &lt;name&gt;                        Deletes the alias named &lt;name&gt;\n  nvm reinstall-packages &lt;version&gt;          Reinstall global `npm` packages contained in &lt;version&gt; to current version\n  nvm unload                                Unload `nvm` from shell\n  nvm which [&lt;version&gt;]                     Display path to installed node version. Uses .nvmrc if available\n\nExample:\n  nvm install v0.10.32                  Install a specific version number\n  nvm use 0.10                          Use the latest available 0.10.x release\n  nvm run 0.10.32 app.js                Run app.js using node v0.10.32\n  nvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32\n  nvm alias default 0.10.32             Set default node version on a shell\n\nNote:\n  to remove, delete, or uninstall nvm - just remove the `$NVM_DIR` folder (usually `~/.nvm`)</code></pre>\n      </div>\n<p>我们安装所支持的版本,v4.2.4\n<code>\nnvm install v4.2.4\n</code>\n如果默认node版本自动跟换为 4.2.4则不需要再更改,若没有更改则执行\n<code>\nnvm use 4.2.4\n</code>\n这时候我们的node版本就升级好了,以后在开发的过程中,如果需要其他版本,可以通过nvm来管理.</p>\n<h5 id=\"六-让ghost保持运行之安装forever\"><a href=\"#%E5%85%AD-%E8%AE%A9ghost%E4%BF%9D%E6%8C%81%E8%BF%90%E8%A1%8C%E4%B9%8B%E5%AE%89%E8%A3%85forever\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>六 让Ghost保持运行之安装forever</h5>\n<code>\nnpm install -g forever\n</code>\n然后执行：\n<code>\nNODE_ENV=production forever start index.js\n</code>\n接下来看一下forever是否挂在了index.js：\n<p>forever list</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">info:    Forever processes running\ndata:        uid  command                                  script   forever pid   id logfile                 uptime        \ndata:    [0] 4EL0 /root/.nvm/versions/node/v4.2.4/bin/node index.js 13249   13565    /root/.forever/4EL0.log 0:1:41:13.947 </code></pre>\n      </div>\n<p>这个状态的话，你就可以开始你的Ghost之路了！</p>\n<p>结束进程命令：\nforever index.js</p>\n<p>参考:</p>\n<p><a href=\"https://www.zhihu.com/question/22755373\">https://www.zhihu.com/question/22755373</a>\n<a href=\"https://snowz.me/how-to-install-ghost/\">https://snowz.me/how-to-install-ghost/</a></p>\n<p>此文花费笔者不少心血编写,转载请注明出处,谢谢</p>","timeToRead":6,"excerpt":"1 任何信息都有时效性,本文写于2016.3.20凌晨\n2 不建议参考本文,请直接参考官方英文文档.  http://ghost.org 笔者在搭建服务器之前,刚刚接触前端开发半年,对于服务器搭建,nodejs,linux命令等完全是小白,完全靠google…","frontmatter":{"title":"在阿里云 ECS Centos6.5上搭建Ghost博客系统,以及nodejs版本控制工具安装","cover":null,"date":"2017-08-20T22:00:00.000Z","category":"blog","tags":["blog"]},"fields":{"nextTitle":"https","nextSlug":"/http/https/","prevTitle":"阿里云服务器搭建hexo博客","prevSlug":"/blog/hexo-blog/","slug":"/blog/ghost/","date":"2017-08-19T16:00:00.000Z"}}},"pageContext":{"slug":"/blog/ghost/"}}