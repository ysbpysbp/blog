{"version":3,"sources":["webpack:///./src/pages/xuenan/index.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./common/utils/date/index.js","webpack:///./src/components/SEO/SEO.jsx"],"names":["Index","componentDidMount","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","Component","__webpack_exports__","module","exports","siteTitle","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","MainLayout","children","this","props","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","name","content","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_3___default","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","push","str","join","parts","split","normalize","arguments","slice","call","undefined","__webpack_require__","getDate","PostListing","getPostList","postList","postEdges","forEach","postEdge","path","node","fields","slug","tags","frontmatter","cover","title","date","excerpt","timeToRead","react__WEBPACK_IMPORTED_MODULE_4___default","map","post","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","key","time","Date","y","getFullYear","m","getMonth","d","SEO","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","url_join__WEBPACK_IMPORTED_MODULE_3___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_4___default","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","type","JSON","stringify","property","react__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-xuenan-index-jsx-573d5185d7e7d0901870.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport Layout from '../../layout'\nimport PostListing from '../../components/PostListing/PostListing'\nimport SEO from '../../components/SEO/SEO'\nimport config from '../../../data/SiteConfig'\n\nclass Index extends React.Component {\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n      <Layout>\n      <div>oweiofe</div>\n      </Layout>\n    )\n  }\n}\n\nexport default Index\n","module.exports = {\n  siteTitle: \"孙志勇的个人网站\", // Site title.\n  siteTitleShort: \"孙志勇的个人网站\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"孙志勇的个人网站\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.jpg\", // Logo used for SEO and manifest.\n  siteUrl: \"https://www.sunzhiyong.cn\", // Domain of your website without pathPrefix.\n  // siteUrl: \"https://vagr9k.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/gatsby-advanced-starter\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"孙志勇的个人网站\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-129069253-1\", // GA tracking ID.\n  disqusShortname: \"sunzhiyong\", // Disqus shortname.\n  // disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"孙志勇\", // Username to display in the author segment.\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"Shanghai, China\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"前端开发\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/zhiyongsun\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Email\",\n      url: \"785037725@qq.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2018. sunzhiyong\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.scss\";\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React from 'react'\nimport { Link } from 'gatsby'\nconst getDate = require('../../../common/utils/date').getDate;\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = []\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: getDate(postEdge.node.fields.date),\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })\n    })\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n    return (\n      <div>\n        {/* Your post list here. */\n          postList.map(post => (\n            <div>\n              {post.date}：\n              <Link to={post.path} key={post.title}>\n                {post.title}\n                {/*<span>{post.date}</span>*/}\n                {/*<p>{post.excerpt}</p>*/}\n              </Link>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nexport default PostListing\n","/**\n * Created by sunzhiyong on 2018/11/7.\n */\nfunction getDate(time) {\n  let date = new Date(time)\n  let y = date.getFullYear()\n  let m = date.getMonth() + 1\n  if (m < 10) {\n    m = '  ' + m\n  }\n  let d = date.getDate()\n  if (d < 10) {\n    d = '0' + d\n  }\n  return `${y}年${m}月${d}日`\n}\n\n\nmodule.exports = {\n  getDate\n}\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = image && urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}